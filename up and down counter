module jk(q,qbar,j,k,clr,clk);
 output q,qbar;
 input j,k,clr,clk;
 nand(a,qbar,j,clr,clk);
 nand(b,k,q,clk);
 not(clkbar,clk);
 nand(y,a,ybar);
 nand(ybar,clr,b,y);
 nand(c,y,clkbar);
 nand(d,clkbar,ybar);
 nand(q,qbar,c);
 nand(qbar,d,clr,q);
endmodule
module counter4(q,clr,clk,j,k,m);
 input j,k,clr,clk,m;
 output [2:0]q;
 wire [2:0]qb;
xor(v1,m,q[0]);
xor(v2,m,q[1]);
 jk j1(q[0],qb[0],j,k,clr,clk);
 jk j2(q[1],qb[1],j,k,clr,v1);
 jk j3(q[2],qb[2],j,k,clr,v2);

endmodule

module updown;
  reg j,k,clr,clk,m;
  wire [2:0]q;
counter4 c1(q,clr,clk,j,k,m);
 initial
 clk=1'b0;
 always 
 #5 clk=~clk;
 initial
 begin
 j=1'b1;k=1'b1;clr=1'b0;
m=1'b0;
 #5 clr=1'b1;
#200 m=1'b1;
 end
endmodule

